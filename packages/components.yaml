components:
  schemas:

    Event:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        player:
          type: string
        count:
          type: integer
        x:
          type: double
        y:
          type: double
        z:
          type: double
        server:
          type: string
        sourceIP:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
      example:
        name: joined-network
        player: 4Ply
        server: lobby
        sourceIP: "127.0.0.1"
        x: 0
        y: 0
        z: 0
        count: 1
        metadata:
          deck-id: 1
          run-id: 123123-123-123-123-123
          run-type: practice
          world-age: 123123123

    Card:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        player:
          type: string
        server:
          type: string
        deckType:
          type: string
        hiddenInDecks:
          type: array
          items:
            type: string
      example:
        name: moment_of_clarity
        player: 4Ply
        server: lobby
        deckType: "p"

    Item:
      allOf:
        - $ref: '#/components/schemas/Card'
        - example:
            name: crown
            player: 4Ply
            server: lobby
            deckType: "p"

    Task:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        arguments:
          type: array
          items:
            type: string
        targetPlayer:
          type: string
        server:
          type: string
        sourceIP:
          type: string
      example:
        type: bungee-message
        targetPlayer: 4Ply
        arguments:
          - Connect
          - builders
        server: lobby
        sourceIP: "127.0.0.1"

    Score:
      type: object
      properties:
        id:
          type: string
        player:
          type: string
        key:
          type: string
        value:
          type: number
        metadata:
          type: object
          additionalProperties:
            type: string
      example:
        player: 4Ply
        key: do2.wins
        value: 1
        metadata:
          deck-id: 1
          run-id: 123123-123-123-123-123
          run-type: practice
          world-age: 123123123

    Claim:
      type: object
      properties:
        id:
          type: string
        player:
          type: string
        claimant:
          type: string
        type:
          type: string
        state:
          type: string
        stateReason:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
      example:
        player: 4Ply
        type: dungeon
        state: pending
        metadata:
          deck-id: 1
          run-id: 123123-123-123-123-123
          run-type: practice
          tome-count: 1

    StatusSection:
      type: object
      properties:
        header:
          type: string
        lines:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: number
      example:
        header: Instances
        lines:
          - key: Total
            value: 3

    Status:
      type: array
      items:
        $ref: '#/components/schemas/StatusSection'
      example:
        - header: Instances
          lines:
            - key: Total
              value: 3

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

