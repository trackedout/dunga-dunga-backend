components:
  schemas:

    Event:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        player:
          type: string
        count:
          type: number
        x:
          type: number
        y:
          type: number
        z:
          type: number
        server:
          type: string
        sourceIP:
          type: string
      example:
        id: 5ebac53as2cxasidoi0213kjzx
        name: joined-network
        player: 4Ply
        server: lobby_1
        sourceIP: "127.0.0.1"
        x: 0
        y: 0
        z: 0
        count: 1

    Card:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        player:
          type: string
        server:
          type: string
        deckId:
          type: string
      example:
        name: moment_of_clarity
        player: 4Ply
        server: lobby_1
        deckId: "1"

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
